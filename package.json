{
	"contributes": {
		"configuration": {
			"title": "behave-vsc",
			"properties": {
				"behave-vsc.envVarOverrides": {
					"scope": "resource",
					"type": "object",
					"markdownDescription": "Optional key-value pairs of environment variable overrides (or additions) to use when calling a behave command. This will apply to all behave tests within the workspace.",
					"additionalProperties": {
						"type": "string"
					}
				},
				"behave-vsc.featuresPath": {
					"scope": "resource",
					"type": "string",
					"markdownDescription": "*workspace-relative* path to the features subfolder. If not `features` (the default), then this must tie up with the `\"paths=\"` setting in your behave configuration file. Example: `mysubfolder/my_behave_tests`.",
					"default": "features"
				},
				"behave-vsc.justMyCode": {
					"scope": "resource",
					"type": "boolean",
					"markdownDescription": "If set to false (disabled), the debugger will step into external code when debugging a behave test.",
					"default": true
				},
				"behave-vsc.multiRootRunWorkspacesInParallel": {
					"scope": "window",
					"type": "boolean",
					"markdownDescription": "For multi-root workspaces only. If enabled, then when behave tests are run from more than one workspace, behave tests from those workspaces are run at the same time. This setting should be in your `*.code-workspace` file.",
					"default": true
				},
				"behave-vsc.runParallel": {
					"scope": "resource",
					"type": "boolean",
					"markdownDescription": "Specifies whether to create a separate behave instance for each feature and run those instances simultaneously (except when debugging). Leave this off for your initial run, then enable if you wish and your test setup supports it (i.e. your features are fully isolated).",
					"default": false
				},
				"behave-vsc.xRay": {
					"scope": "window",
					"type": "boolean",
					"markdownDescription": "Specifies whether extension errors have stack traces and diagnostics are logged in console. The console output is viewable via the vscode command `Developer: Toggle Developer Tools`. Diagnostic logs are noisy, and may have a small performance impact.",
					"default": false
				}
			}
		},
		"commands": [
			{
				"command": "behave-vsc.gotoStep",
				"title": "Go to Step Definition"
			},
			{
				"command": "behave-vsc.findStepReferences",
				"title": "Find All Step References"
			},
			{
				"command": "behave-vsc.stepReferences.next",
				"title": "Step References: Next"
			},
			{
				"command": "behave-vsc.stepReferences.prev",
				"title": "Step References: Previous"
			}
		],
		"keybindings": [
			{
				"command": "behave-vsc.gotoStep",
				"key": "f12",
				"when": "!isInEmbeddedEditor && editorTextFocus && resourceExtname =~ /\\.feature$/"
			},
			{
				"command": "behave-vsc.findStepReferences",
				"key": "alt+f12",
				"when": "!isInEmbeddedEditor && editorTextFocus && resourcePath =~ /steps/ && resourceExtname =~ /\\.py$/"
			},
			{
				"command": "behave-vsc.stepReferences.next",
				"when": "behave-vsc.stepReferences.navKeysEnabled",
				"key": "f4"
			},
			{
				"command": "behave-vsc.stepReferences.prev",
				"when": "behave-vsc.stepReferences.navKeysEnabled",
				"key": "shift+f4"
			}
		],
		"languages": [
			{
				"id": "gherkin",
				"icon": {
					"light": "./images/gherkin.png",
					"dark": "./images/gherkin.png"
				},
				"extensions": [
					"feature"
				],
				"aliases": [
					"Gherkin",
					"behave",
					"Feature"
				],
				"configuration": "./gherkin.language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "gherkin",
				"scopeName": "gherkin.grammar",
				"path": "./gherkin.grammar.json"
			}
		],
		"snippets": [
			{
				"language": "gherkin",
				"path": "./gherkin.snippets.json"
			}
		],
		"configurationDefaults": {
			"editor.semanticTokenColorCustomizations": {
				"rules": {
					"missing_step": "#cf1036"
				}
			}
		},
		"menus": {
			"editor/context": [
				{
					"when": "!isInEmbeddedEditor && editorTextFocus && resourceExtname =~ /\\.feature$/",
					"command": "behave-vsc.gotoStep",
					"group": "navigation"
				},
				{
					"when": "!isInEmbeddedEditor && editorTextFocus && resourcePath =~ /steps/ && resourceExtname =~ /\\.py$/",
					"command": "behave-vsc.findStepReferences",
					"group": "navigation"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "StepReferences",
					"title": "Step References",
					"icon": "images/behave-vsc.png"
				}
			]
		},
		"views": {
			"StepReferences": [
				{
					"id": "StepReferences",
					"name": "Step References",
					"icon": "images/behave-vsc.png",
					"contextualTitle": "Step References",
					"when": "behave-vsc.stepReferences.visible"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "StepReferences",
				"contents": ""
			}
		]
	},
	"name": "behave-vsc",
	"displayName": "Behave VSC",
	"description": "Debug, Run and Navigate Python behave tests",
	"version": "0.6.2",
	"icon": "images/behave-vsc.png",
	"galleryBanner": {
		"color": "#2B2B2B",
		"theme": "dark"
	},
	"publisher": "jimasp",
	"private": true,
	"license": "SEE LICENSE IN LICENSE.txt",
	"homepage": "https://github.com/jimasp/behave-vsc/blob/main/README.md",
	"bugs": {
		"url": "https://github.com/jimasp/behave-vsc/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/jimasp/behave-vsc.git"
	},
	"engines": {
		"vscode": "^1.82.0"
	},
	"categories": [
		"Testing",
		"Debuggers"
	],
	"keywords": [
		"behave",
		"debug",
		"python",
		"feature",
		"bdd",
		"multi-root ready"
	],
	"qna": false,
	"extensionDependencies": [
		"ms-python.python"
	],
	"activationEvents": [
		"workspaceContains:**/*.feature"
	],
	"main": "./dist/extension.js",
	"scripts": {
		"prevscode:prepublish": "npm run test",
		"vscode:prepublish": "npm run package",
		"compile": "npm run clean-output && webpack",
		"watch": "npm run clean-output && webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"lint": "eslint src --ext ts",
		"test": "node ./out/_integrationTests/runTestSuites.js --stable",
		"pretest": "npm run compile && npm run compile-tests && npm run lint",
		"pretestinsiders": "npm run pretest",
		"testinsiders": "node ./out/_integrationTests/runTestSuites.js --insiders",
		"rimraf": "./node_modules/rimraf/bin.js",
		"clean-output": "rimraf out/ dist/"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/mocha": "^9.0.0",
		"@types/node": "17.x",
		"@types/vscode": "^1.82.0",
		"@types/xml2js": "^0.4.11",
		"@typescript-eslint/eslint-plugin": "^5.9.0",
		"@typescript-eslint/parser": "^5.9.0",
		"@vscode/test-electron": "^2.1.3",
		"eslint": "^8.6.0",
		"glob": "^7.1.7",
		"mocha": "^9.1.3",
		"rimraf": "^3.0.2",
		"ts-loader": "^9.2.5",
		"typescript": "^4.5.5",
		"webpack": "^5.76.0",
		"webpack-cli": "^4.8.0"
	},
	"dependencies": {
		"xml2js": "^0.6.2"
	}
}